from datetime import datetime
from typing import List, Dict

from telebot.types import Message
from loguru import logger

from loader import bot
from database.database import db_get_history
from keyboards.inline_keyboards import all_commands, yes_no_keyboard
from time import sleep


def text_history(query: Dict, date, message: Message) -> str:
    """    –§—É–Ω–∫—Ü–∏—è, —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    –ü–æ–ª—É—á–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç.
    –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç,
    –æ—á–∏—â–∞–µ—Ç –µ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é.

    –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç.

    """
    try:
        logger.info(f'{message.chat.id} - history.py | —Å–æ—Å—Ç–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')

        text_length: int = 2000
        text: str = ''

        for element in query:
            hotel_text = ''

            if date == element['create_date'].date():
                dates = element['create_date']
                result_date = dates.strftime('%H:%M')
                command = str(element['command_name'])
                city = str(element['search_city'])
                check_in = element['check_in'].strftime('%d.%m.%Y')
                check_out = element['check_out'].strftime('%d.%m.%Y')
                for key, value in element['hotels'].items():
                    hotel_text += f'\nüî∏[{key}]({value})'

                history_text = f'\nüïê{result_date}\n' \
                               f'{command}\n' \
                               f'*{city}*\n' \
                               f'üìÜ{check_in} - {check_out}\n' \
                               f'{hotel_text}\n'

                if len(text) + len(history_text) > text_length:
                    bot.send_message(message.chat.id, text,
                                     parse_mode='Markdown',
                                     disable_web_page_preview=True)
                    text = ''

                text += history_text

        return text
    except Exception as ex:
        logger.error(f'history.py | –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ - {ex}')


def history_list(query: Dict, today):
    """
    –§—É–Ω–∫—Ü–∏—è, —Å–æ–±–∏—Ä–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –¥–∞—Ç–∞–º–∏,
    –≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –±–æ—Ç–∞

    """
    try:
        full_dates: List = []
        today_history = False

        for element in query:
            dates = element['create_date'].date()
            if today == dates:
                today_history = True

            if dates not in full_dates:
                full_dates.append(dates)

        return full_dates, today_history
    except Exception as ex:
        logger.error(f'history.py | –°–±–æ—Ä –≤—Å–µ—Ö –¥–∞—Ç - {ex}')


def full_history_message(message: Message, query: Dict,
                         full_dates: List, end: int, start: int = 0) -> None:
    """    –§—É–Ω–∫—Ü–∏—è, –≤—ã–≤–æ–¥–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –ø–æ –¥–Ω—è–º.

    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î,
    —Å–ø–∏—Å–æ–∫ —Å–æ –≤—Å–µ–º–∏ –¥–∞—Ç–∞–º–∏, –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ –¥–∞—Ç –∏ —Å –∫–∞–∫–æ–≥–æ –Ω–∞—á–∏–Ω–∞—Ç—å –≤—ã–≤–æ–¥–∏—Ç—å
    """
    try:
        logger.info(f'{message.chat.id} - history.py | –í—ã–≤–æ–∂—É –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –ø–æ –¥–Ω—è–º')

        for date in full_dates[start:end]:
            sleep(1)
            bot.send_message(
                chat_id=message.chat.id,
                text=f'*–ò—Å—Ç–æ—Ä–∏—è –∑–∞ {date.strftime("%d.%m.%Y")}*',
                parse_mode='Markdown',
                disable_web_page_preview=True)
            text = text_history(query, date, message)
            bot.send_message(message.chat.id, text, parse_mode='Markdown', disable_web_page_preview=True)
            full_dates.pop(0)
    except Exception as ex:
        logger.error(f'history.py | –ò—Å—Ç–æ—Ä–∏—è –ø–æ –¥–Ω—è–º - {ex}')


@bot.message_handler(commands=['history'])
def history(message: Message) -> None:
    """    –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /history

    –°–º–æ—Ç—Ä–∏—Ç —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É, –∏ –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î, –∏—â–µ—Ç –≤—Å–µ –¥–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è;
    –ï—Å–ª–∏ –¥–∞—Ç –Ω–µ—Ç, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç—Ç–æ–º, –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –¥–∞—Ç –Ω–∞–π–¥–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —á–∏—Å–ª–æ -
    –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å, –∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è,
    –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –±–æ—Ç–∞
    """
    try:
        logger.info(f'{message.chat.id} - history.py | –≤—ã–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã /history')

        today_date = datetime.now().date()
        query = db_get_history(message.chat.id)

        full_dates, today_history = history_list(query, today_date)
        if not full_dates:
            bot.send_message(
                chat_id=message.chat.id,
                text=f'–ò—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –µ—â–µ –Ω–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥',
                reply_markup=all_commands())
        elif today_history:
            text = text_history(query, today_date, message)

            bot.send_message(
                chat_id=message.chat.id,
                text=f'–ò—Å—Ç–æ—Ä–∏—è –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n{text}',
                parse_mode='Markdown',
                disable_web_page_preview=True)
            sleep(1)
            bot.send_message(message.chat.id, '–í—ã–≤–µ—Å—Ç–∏ –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é?', reply_markup=yes_no_keyboard())

        else:
            full_dates.sort(reverse=True)
            last_date = full_dates[0]
            bot.send_message(
                chat_id=message.chat.id,
                text=f'–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ {last_date.strftime("%d.%m.%Y")}')
            bot.send_message(message.chat.id, f'–°–µ–π—á–∞—Å –≤—ã–≤–µ–¥—É –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')
            end = 3
            full_history_message(message, query, full_dates, end)
            if not full_dates:
                sleep(1)
                bot.send_message(message.chat.id, '–≠—Ç–æ –≤—Å—è –∏—Å—Ç–æ—Ä–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èü§´')
                sleep(1)
                bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ–∏—â–µ–º –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å', reply_markup=all_commands())
            else:
                bot.send_message(message.chat.id, '–í—ã–≤–µ—Å—Ç–∏ –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é?', reply_markup=yes_no_keyboard())
    except Exception as ex:
        logger.error(f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ {ex}')
        bot.send_message(message.chat.id, 'ü§ï–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏—Å—Ç–æ—Ä–∏–∏. –°–∫–æ—Ä–æ –º–µ–Ω—è –ø–æ—á–∏–Ω—è—Ç')


def full_history(message: Message):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–≤–æ–¥–∏—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–æ–≥–æ,
    —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É–≤–∏–¥–µ–ª

    """
    try:
        logger.info(f'{message.chat.id} - history.py | –≤—ã–≤–æ–¥ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è')

        today_date = datetime.now().date()
        query = db_get_history(message.chat.id)

        full_dates, today_history = history_list(query, today_date)
        full_dates.sort(reverse=True)

        if today_history:
            start = 1
        else:
            start = 3

        end = len(full_dates)
        full_history_message(message, query, full_dates, end, start)
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ–∏—â–µ–º –µ—â–µ —á—Ç–æ-–Ω–∏–±—É–¥—å', reply_markup=all_commands())
    except Exception as ex:
        logger.error(f'history.py | –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è - {ex}')
        bot.send_message(message.chat.id, 'ü§ï–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏.')
